{"version":3,"sources":["components/filter/Filter.module.css","redux/actions.js","components/contactList/ContactList.js","components/filter/Filter.js","components/contactForm/ContactForm.js","components/App.js","redux/reducer.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","addNewToList","createAction","deletedItem","filterChange","mapDispatchToProps","handleDelete","connect","state","items","formattedFilter","filter","toLowerCase","trim","item","name","includes","map","id","number","type","onClick","handleChange","className","styles","formInput","onChange","evt","target","value","ContactForm","handleSubmit","props","some","alert","newContact","uuidv4","setState","onSubmit","preventDefault","formMain","this","formLabel","placeholder","pattern","title","required","formBtn","Component","App","mainReducer","createReducer","action","payload","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55b4da4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"Filter_formInput__x1Ost\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// const ADD_TO_LIST = \"list/addToList\";\r\n// const DELETED_ITEM = \"list/deletedItem\";\r\n// const FILTER_CHANGE = \"filter/filterChange\";\r\n\r\n// export { ADD_TO_LIST, DELETED_ITEM, FILTER_CHANGE };\r\n\r\nconst addNewToList = createAction(\"list/addToList\");\r\nconst deletedItem = createAction(\"list/deletedItem\");\r\nconst filterChange = createAction(\"filter/filterChange\");\r\n//  ============== Old\r\n// const addNewToList = (payload) => {\r\n//   return {\r\n//     type: ADD_TO_LIST,\r\n//     payload,\r\n//   };\r\n// };\r\n\r\n// const deletedItem = (payload) => {\r\n//   return {\r\n//     type: DELETED_ITEM,\r\n//     payload,\r\n//   };\r\n// };\r\n\r\n// const filterChange = (payload) => {\r\n//   return {\r\n//     type: FILTER_CHANGE,\r\n//     payload,\r\n//   };\r\n// };\r\n\r\nexport { addNewToList, deletedItem, filterChange };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deletedItem } from \"../../redux/actions\";\r\n\r\nconst ContactList = ({ items, handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      {items.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button type=\"button\" onClick={() => handleDelete(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state;\r\n\r\n  const formattedFilter = filter.toLowerCase().trim();\r\n  const filteredItems = items.filter((item) =>\r\n    item.name.toLowerCase().includes(formattedFilter)\r\n  );\r\n  return {\r\n    items: filteredItems,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleDelete: deletedItem,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterChange } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  const onChange = (evt) => {\r\n    handleChange(evt.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Find contacts by name</h2>\r\n      <input\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        className={styles.formInput}\r\n        onChange={onChange}\r\n        value={filter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: state.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleChange: filterChange,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { addNewToList } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (name, number) => {\r\n    const isDuplicate = this.props.items.some((item) => item.name === name);\r\n\r\n    if (isDuplicate) {\r\n      alert(name + \" is already in contacts \");\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.props.addNewToList(newContact);\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.handleSubmit(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.formMain} onSubmit={this.onSubmit}>\r\n        <label className={styles.formLabel}>\r\n          Name\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            placeholder=\"Enter your name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.formLabel}>\r\n          Number\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n            placeholder=\"123-45-67\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.formBtn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addNewToList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport ContactForm from \"./contactForm/ContactForm\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addNewToList, deletedItem, filterChange } from \"./actions\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filter: \"\",\r\n};\r\n\r\nconst mainReducer = createReducer(initialState, {\r\n  [addNewToList]: (state, action) => ({\r\n    ...state,\r\n    items: [action.payload, ...state.items],\r\n  }),\r\n  [deletedItem]: (state, action) => ({\r\n    ...state,\r\n    items: state.items.filter((item) => item.id !== action.payload),\r\n  }),\r\n  [filterChange]: (state, action) => ({\r\n    ...state,\r\n    filter: action.payload,\r\n  }),\r\n});\r\n\r\nexport default mainReducer;\r\n// ============= Old\r\n\r\n// const mainReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case ADD_TO_LIST:\r\n//       return {\r\n//         ...state,\r\n//         items: [action.payload, ...state.items],\r\n//       };\r\n//     case DELETED_ITEM:\r\n//       return {\r\n//         ...state,\r\n//         items: state.items.filter((item) => item.id !== action.payload),\r\n//       };\r\n//     case FILTER_CHANGE:\r\n//       return {\r\n//         ...state,\r\n//         filter: action.payload,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// import { combineReducers } from \"redux\";\r\n\r\n// const contactsReducer = (state = {contacts: []}, action) => {\r\n//   return state;\r\n// };\r\n\r\n// const errorReducer = (state = \"\", action) => {\r\n//   return state;\r\n// };\r\n\r\n// const productsReducer = combineReducers({\r\n//   items: contactsReducer,\r\n//   error: errorReducer,\r\n// });\r\n\r\n// export default productsReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport mainReducer from \"./reducer\";\r\n\r\nconst store = createStore(mainReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport store  from './redux/store'\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\n// import {myAction} from './redux/actions'\n\nReactDOM.render(\n  <>\n    < Provider store={store}>\n    <App />\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formMain\":\"ContactForm_formMain__3JJgv\",\"formLabel\":\"ContactForm_formLabel__2CVej\",\"formInput\":\"ContactForm_formInput__2sdFW\",\"formBtn\":\"ContactForm_formBtn__26Pt5\"};"],"sourceRoot":""}